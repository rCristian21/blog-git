"master 1"

"master 2"




directorio // staging // repositorio
bio.txt >> git add bio.txt >> up
untracket // tracked // save

git rm bio.txt
"quitar el archivo del staging"
git rm --cached 
"quita todos los archivos del repositorio y staging(untracket) pero mantienen en Disco"
git rm --forced 
"Elimina del disco pero mantienen en un commit anterior"


git log bio.txt
"Muestra el historial de ese archivo especifico"

git diff (#commit) (#commit)
"Que cambio con respecto a los dos"

git reset soft
"Volver a la version anterior pero matiene cambios en staging"

git reset hard
"Volver a la version anterior totalmente"

git reset HEAD 
"Saca los archivos de staging"


git merge 
o----o----o----o----o--o
       \           /
        \o---o---o/


git checkout (#commit) bio.txt
"Ver una version anterior de un archivo"

git checkout master bio.txt
"Volver a ver la version up del archivo"

git clone (url)
"clone"

git fetch 
"trae los archivos pero no los junta"
git merge 
"los junta"
git pull 
"fetch + pull"

git push 
"sube los cambio al repositorio"


master o---o---o---o---o
           |       |
header     o---o---o

git merge (rama)
"Desde la rama master traigo la otra"

"Cuando se quiere subir un repositorio local a otro repositorio con distintos commits"
git pull origin master --allow-unrelated-histories

/////////////////////////////////////
Tag y versiones

Salida grafica comprimida
git log --all --graph --decorate --oneline
gittree

git tag -a v0.1 -m "Primeras clases" (#commit)7ae7b1f
"Crear un tag"
pull and (push origin --tags)

git tag -d v0.1
"Borrar un tag"
pull and (push origin --tags)
git push origin :refs/tags/dormido

"cambios no guardados, pero nesecito cambiar de rama"
git stash 
"xxxx"
git stash pop
"restaurar"


git clean --dry-run 
"ver lo que se va a borrar"
"git clean -f"
borrar
"Solo borra archivos tracked, no carpetas"


"Cherry pick"
git cherry-pick (#commit)
traer un commit 


"Cuando todo esta reventado"
git reflog 
git reset --hard (#commit)

